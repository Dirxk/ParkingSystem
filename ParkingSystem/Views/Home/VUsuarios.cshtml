@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Usuarios";
}

@{
    ViewData["Title"] = "Entradas y Salidas";
}


<header>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://cdn.grapecity.com/wijmo/5.20242.30/styles/wijmo.min.css" rel="stylesheet">
</header>

<div class="card text-center mt-3">
    <div class="card-header d-flex align-items-center " style="font-size: 1.5rem;">
            <div class="col-6 d-flex align-items-center">
                <i class="fa-solid fa-user d-lg-block d-none" style="font-size: 2rem; margin-right: 8px;"></i>
                <span>Usuarios</span>
            </div>

            <div class="col-6 d-flex justify-content-end">
                <button type="button" id="btnReload" name="btnReload" class="btn btn-primary me-2 align-content-center">
                    <i class="fas fa-sync-alt"></i>
                </button>
                <button type="button" class="btn btn-success align-content-center" data-bs-toggle="modal" data-bs-target="#UserModal">
                    <i class="fas fa-plus"></i>
                </button>
            </div>
    </div>
    <div class="card-body">
        <div id="userGrid"></div>
    </div>
</div>




<!-- Modal -->
<div class="modal fade" id="UserModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agregar usuario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row">
                        <div class="col-6 mb-3">
                            <label for="inputNombre" class="form-label">Nombre:</label>
                            <input type="text" class="form-control" id="inputNombre" placeholder="Nombre">
                        </div>
                        <div class="col-6 mb-3">
                            <label for="inputApellido" class="form-label">Apellido:</label>
                            <input type="text" class="form-control" id="inputApellido" placeholder="Apellido">
                        </div>
                    </div>

                    <div class="row">
                        <div class="mb-3">
                            <label for="inputCorreo" class="form-label">Correo:</label>
                            <input type="email" class="form-control" id="inputCorreo" placeholder="nombre@ejemplo.com">
                        </div>
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <button class="btn btn-outline-secondary toggle-password" type="button">
                                    <i class="fas fa-lock"></i>
                                </button>
                            </div>
                            <input type="password" class="form-control password-input input-valid-out" id="inputPassword" name="password" minlength="8" placeholder="Contraseña" aria-label="Password" aria-describedby="basic-addon1" required>
                        </div>
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <button class="btn btn-outline-secondary toggle-password1" type="button">
                                    <i class="fas fa-lock"></i>
                                </button>
                            </div>
                            <input type="password" class="form-control password-input1 input-valid-out" id="inputRPassword" name="Rpassword" minlength="8" placeholder="Repetir Contraseña" aria-label="Password" aria-describedby="basic-addon1" required>
                        </div>
                        <div class="mb-3">
                            <label for="inputFoto" class="form-label">Insertar fotografía:</label>
                            <input class="form-control" type="file" id="inputFoto">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" id="btnRegistrarUsuario">Registrar Usuario</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.grapecity.com/wijmo/5.20242.30/controls/wijmo.min.js"></script>
    <script src="https://cdn.grapecity.com/wijmo/5.20242.30/controls/wijmo.input.min.js"></script>
    <script src="https://cdn.grapecity.com/wijmo/5.20242.30/controls/wijmo.grid.min.js"></script>
    <script src="https://cdn.grapecity.com/wijmo/5.20242.30/controls/wijmo.grid.filter.min.js"></script>
    <script src="https://cdn.grapecity.com/wijmo/5.20242.30/controls/wijmo.grid.cellmaker.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        var gridUser1 = null;
        const urlGetUsuarios = '@Url.Action("GetUsuarios", "ParkingSystem")';

        function verUser() {
            $.ajax({
                type: 'post',
                data: {},
                url: urlGetUsuarios,
                success: function (datos) {
                    gridUser1.itemsSource = datos.data;
                },
                error: function () {
                    console.error("Error al obtener los usuarios.");
                }
            });
        }
        
        $(document).ready(function () {
            gridUser1 = new wijmo.grid.FlexGrid('#userGrid', {
                autoGenerateColumns: false,
                headersVisibility: 'Column',
                columns: [
                    { binding: 'idUsuario', header: 'Identificador', width: '*' },
                    { binding: 'nombre', header: 'Nombre', width: '*' },
                    { binding: 'apellido', header: 'Apellido', width: '*' },
                    { binding: 'correo', header: 'Correo', width: '*' }
                ],
                isReadOnly: true
            });

            verUser();

            $('#btnReload').on('click', function () {
                let timerInterval;
                Swal.fire({
                    title: "Recargando",
                    timer: 2000,
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading();
                        timerInterval = setInterval(() => {}, 100);
                    },
                    willClose: () => {
                        clearInterval(timerInterval);
                    }
                }).then((result) => {
                    if (result.dismiss === Swal.DismissReason.timer) {
                        verUser(); // Recargar los datos del grid
                        console.log("Grid recargado");
                    }
                });
            });
        });

        $(".toggle-password").click(function () {
            const $passwordInput = $('.password-input');
            const $icon = $(this).find('i');

            if ($passwordInput.attr('type') === 'password') {
                $passwordInput.attr('type', 'text');
                $icon.removeClass('fa-lock').addClass('fa-lock-open');
            } else {
                $passwordInput.attr('type', 'password');
                $icon.removeClass('fa-lock-open').addClass('fa-lock');
            }
        });

        $(".toggle-password1").click(function () {
            const $passwordInput = $('.password-input1');
            const $icon = $(this).find('i');

            if ($passwordInput.attr('type') === 'password') {
                $passwordInput.attr('type', 'text');
                $icon.removeClass('fa-lock').addClass('fa-lock-open');
            } else {
                $passwordInput.attr('type', 'password');
                $icon.removeClass('fa-lock-open').addClass('fa-lock');
            }
        });


        $("#btnRegistrarUsuario").on("click", function () {
            // Mostrar el mensaje de SweetAlert2
            Swal.fire({
                position: "center",
                icon: "success",
                title: "El usuario ha sido registrado con éxito",
                showConfirmButton: false,
                timer: 1500
            });

            // Cerrar el modal
            $("#UserModal").modal("hide");
        });
    </script>
}
